ifneq ($(HOST),$(TARGET))

CC ?= $(TARGET)-gcc
AR ?= $(TARGET)-ar

CONFIGURE_FLAGS := \
    --host=$(TARGET)

    ifeq (androideabi,$(findstring androideabi,$(TARGET)))

    CONFIGURE_FLAGS += \
        --with-default-fonts=/system/fonts \
        --with-sysroot=$(ANDROID_NDK)/platforms/android-18/arch-arm/ \
        --with-cache-dir=/sdcard/servo/.fccache \
        $(NULL)

    endif

else

CC ?= gcc
AR ?= ar

endif

# Fix up OUT_DIR paths on Windows
ifeq (windows,$(findstring windows,$(TARGET)))
OUT_DIR := $(shell cygpath "$(OUT_DIR)")
endif

# On MSVC, no -FPIC
ifeq (,$(findstring windows-msvc,$(TARGET)))
CXXFLAGS += -fPIC
endif

ifneq (android,$(findstring android,$(TARGET)))

CONFIGURE_FLAGS += \
    --sysconfdir=/etc \
    --localstatedir=/var \
    $(NULL)

endif

ifneq (darwin,$(findstring darwin,$(TARGET)))

SRC_DIR = $(shell pwd)

all: $(OUT_DIR)/libfontconfig.a

$(OUT_DIR)/libfontconfig.a: $(OUT_DIR)/Makefile
	cd $(OUT_DIR) && make -j$(NUM_JOBS)
	cp $(OUT_DIR)/src/.libs/libfontconfig.a $(OUT_DIR)

ifneq ($(HOST),$(TARGET))

EXPAT_FLAGS = --with-expat-includes="$(DEP_EXPAT_OUTDIR)/include" \
              --with-expat-lib="$(DEP_EXPAT_OUTDIR)/lib"
FREETYPE_CFLAGS = -I$(DEP_FREETYPE_OUTDIR)/include/freetype2
FREETYPE_LIBS = -L$(DEP_FREETYPE_OUTDIR)/lib -lfreetype

else

EXPAT_FLAGS =
FREETYPE_CFLAGS =
FREETYPE_LIBS =

endif

$(OUT_DIR)/Makefile:
	cd $(OUT_DIR) && \
		CC="$(CC)" \
		AR="$(AR)" \
		FREETYPE_CFLAGS="$(FREETYPE_CFLAGS)" \
		FREETYPE_LIBS="$(FREETYPE_LIBS)" \
		CFLAGS="-fPIC" \
		$(SRC_DIR)/configure \
		--disable-docs \
		--disable-shared \
		$(EXPAT_FLAGS) \
		$(strip $(CONFIGURE_FLAGS))

else

all:

endif
